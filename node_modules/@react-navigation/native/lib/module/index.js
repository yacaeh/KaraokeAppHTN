<<<<<<< HEAD
export * from '@react-navigation/core';
export { default as NavigationContainer } from './NavigationContainer';
export { default as useBackButton } from './useBackButton';
export { default as useScrollToTop } from './useScrollToTop';
export { default as DefaultTheme } from './theming/DefaultTheme';
export { default as DarkTheme } from './theming/DarkTheme';
export { default as ThemeProvider } from './theming/ThemeProvider';
export { default as useTheme } from './theming/useTheme';
export { default as Link } from './Link';
export { default as useLinking } from './useLinking';
export { default as useLinkTo } from './useLinkTo';
export { default as useLinkProps } from './useLinkProps';
export { default as useLinkBuilder } from './useLinkBuilder';
export { default as ServerContainer } from './ServerContainer';
export * from './types';
=======
/* eslint-disable import/no-commonjs */
module.exports = {
  get createAppContainer() {
    return require('./createAppContainer').default;
  },

  get createKeyboardAwareNavigator() {
    return require('./createKeyboardAwareNavigator').default;
  },

  get createNavigationAwareScrollable() {
    return require('./createNavigationAwareScrollable').default;
  },

  get withOrientation() {
    return require('./withOrientation').default;
  },

  get ResourceSavingSceneView() {
    return require('./ResourceSavingSceneView').default;
  },

  get SafeAreaView() {
    return require('react-native-safe-area-view').default;
  },

  get ScrollView() {
    return require('./Scrollables').ScrollView;
  },

  get FlatList() {
    return require('./Scrollables').FlatList;
  },

  get SectionList() {
    return require('./Scrollables').SectionList;
  },

  get Themed() {
    return require('./Themed').default;
  },

  get createNavigationFactory() {
    return require('./throwIfWrongVersion').default;
  },

  get useNavigationBuilder() {
    return require('./throwIfWrongVersion').default;
  },

  get useNavigation() {
    return require('./throwIfWrongVersion').default;
  },

  get useRoute() {
    return require('./throwIfWrongVersion').default;
  },

  get useFocusEffect() {
    return require('./throwIfWrongVersion').default;
  },

  get useIsFocused() {
    return require('./throwIfWrongVersion').default;
  },

  get useNavigationState() {
    return require('./throwIfWrongVersion').default;
  },

  get NavigationContainer() {
    return require('./throwIfWrongVersion').default;
  }

};
>>>>>>> master
//# sourceMappingURL=index.js.map